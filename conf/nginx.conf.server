## Cache configuration
proxy_cache_path /data/funes_rmb_cache levels=1:2 keys_zone=fwd_proxy_cache:10m max_size=10g inactive=365d use_temp_path=off;

## Set valid cached response types.
## The time here is overridden by our injected `expires $uri_expiry` header.
proxy_cache_valid 200 206 301 302 1s;

## Ignore headers that make requests uncacheable
proxy_ignore_headers Set-Cookie Vary X-Accel-Expires Expires Cache-Control;

## Settings for handling range requests
slice 1m;
proxy_set_header  Range $slice_range;


# ====================== Expiration Rules ====================== #

## Configures expiration for upstream content based on content type.
map $upstream_http_content_type $content_type_expiry {
    default                                 1m;
    'application/json'                      1m;
    'application/pdf'                       max;            # max means 10 years to nginx
    'application/octet-stream'              max;
    'image/jpeg'                            max;
    'image/gif'                             max;
    'image/png'                             max;
    'image/bmp'                             max;
    'image/webp'                            max;
    'video/webm'                            max;
    'video/ogg'                             max;
    'video/mp4'                             max;
    'application/binary'                    -1s;            # used by HLS streams
    'application/vnd.apple.mpegurl'         -1s;
}

map $host $host_expiry {
    default                     $content_type_expiry;
    # foo.com                   30d;                        # example of expiry by host
    "~*uplynk.com"              -1s;                        # known HLS stream provider
}

map $uri $uri_expiry {
    default                     $host_expiry;
    # "~*.gifv"                 30d;                        # example of expiry by uri/file extension
}

# ====================== End Expiration Rules ====================== #


# ====================== Client Proxy ====================== #

##
## Proxy connected to by clients (i.e. Chrome), usually using port 3128.
##
## Also functions as a transparent proxy using port 80 (HTTP) and 443 (HTTPS).
##

## Header to indicate proxy usage
map $scheme $proxied_by_value {
    "http"    "funes";
    "https"   "funes-ssl";
}

## Proxy destination based on scheme
map $scheme $proxy_destination {
    "http"      http://127.0.0.1:4480;
    "https"     http://127.0.0.1:4443;
}

server {
    listen 80;
    listen 3128;
    listen 443 ssl;

    ssl_certificate     ./nginx.crt;
    ssl_certificate_key ./nginx.key;

    add_header Proxied-By $proxied_by_value;

    proxy_connect;
    proxy_connect_allow                 443 563;

    # read/send_timeout are used to keep the connection open to the client
    # even if no data is sent on the proxy. Normally this is set to ~60s, but
    # that is causing issues with the cache - it takes a long time to respond
    # to stale requests, maybe because it's trying to use an open channel.
    # Keeping these timeouts low seems to alleviate that problem.
    proxy_connect_connect_timeout       10s;
    proxy_connect_read_timeout          10s;
    proxy_connect_send_timeout          10s;
    proxy_connect_address               127.0.0.1:443;

    location / {
        resolver 8.8.8.8;

        proxy_set_header Host            $host;
        proxy_set_header X-Forwarded-For $remote_addr;

        proxy_pass $proxy_destination;
        proxy_cache fwd_proxy_cache;
        proxy_cache_key $scheme$request_method$host$uri$is_args$args$slice_range;
        proxy_cache_convert_head off;
        proxy_cache_methods GET HEAD;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update off;
        proxy_cache_lock on;

        add_header X-Funes-Cache-Status $upstream_cache_status;

        access_log ./logs/cache.log nginx_cache;
    }
}

# ====================== End Client Proxy ====================== #


# ====================== Forward Proxies ====================== #

##
## HTTP and HTTPS forward proxies. These proxy requests to external upstreams
## and set custom expiration headers to allow granular expiration rules.
##

map $server_port $forward_proxied_by_value {
    4480 "funes-forward";
    4443 "funes-ssl-forward";
}

map $server_port $forward_proxy_scheme {
    4480 http;
    4443 https;
}

server {
    listen 4480;
    listen 4443;

    add_header Proxied-By $forward_proxied_by_value;

    expires $uri_expiry;

    location / {
        resolver 8.8.8.8;

        proxy_pass $forward_proxy_scheme://$host$uri$is_args$args;

        proxy_ssl_verify on;
        proxy_ssl_verify_depth 2;
        proxy_ssl_trusted_certificate ./cacert.pem;
        proxy_ssl_server_name on;
    }
}

# ====================== End Forward Proxies ====================== #
